name: 🧪 Tesseract CMake Unittests
  
on:
  workflow_dispatch:

jobs:
  build:
    name: '${{ matrix.icon }} ${{ matrix.os }}-${{ matrix.cpp_compiler }}'
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # '🟨','🟦','🟩','🟥','🟪'
      matrix:
        os: [ubuntu-latest]
        cpp_compiler: [g++, clang++]
        include:
          - os: ubuntu-latest
            cpp_compiler: g++
            cxxflags: -Wno-format-security
            build_type: Release
            icon: '🟦'
          - os: ubuntu-latest
            cpp_compiler: clang++
            cxxflags: ''
            build_type: Release            
            icon: '🟪'
            
    steps:
    - name: '📦 Install dependencies (Linux)'
      run: >
           sudo apt-get install libleptonica-dev libpango1.0-dev
      if: runner.os == 'Linux'
      
    - name: '️🆔 Set build output dir'
      id: strings
      shell: bash
      run: |
           echo "build-output-dir=${{ github.workspace }}/tesseract/build" >> "$GITHUB_OUTPUT"
           
    - name: '🧰 Get Source'
      run: |
           git clone --depth 1 https://github.com/zdenop/tesseract.git -b cmake_testing --single-branch
           cd tesseract
           git submodule update --init
           git clone --depth 1 https://github.com/egorpugin/tessdata tessdata_unittest
           mv tessdata_unittest/fonts/* ${{ github.workspace }}/tesseract/test/testing/
           cp -R -v tessdata_unittest/* ${{ github.workspace }}/tesseract/
           
    - name: '🔧 Configure CMake'
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_FLAGS="${{ matrix.cxxflags}}" \
              -S ${{ github.workspace }}/tesseract -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TRAINING_TOOLS=ON -DBUILD_TESTS=ON

    - name: '🚧 Build'
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j 4

    - name: '🔨 Run tests'
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest --build-config ${{ matrix.build_type }} --test-dir ${{ steps.strings.outputs.build-output-dir }} --output-on-failure -O test-suite.log -j 4
      
  msys2:
    name: ${{ matrix.os }}.${{ matrix.build_type }}.${{ matrix.msys2.msystem }}
    runs-on: ${{ matrix.os }}
    defaults:
        run:
            shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        config:
          - { msystem: UCRT64,  arch: x86_64,  family: GNU,  compiler: g++ }
        build_type:
          - Release

    steps:
      - name: Install Base Dependencies
        uses: msys2/setup-msys2@v2
        with:
          cache: false
          msystem: ${{ matrix.msys2.msystem }}
          update: true
          install: >-
            git
            base-devel
          pacboy: >-
            cc:p
            cmake:p
            ninja:p
            leptonica:p
            pango:p   
            
      - name: '🧰 Get Source'
        run: |
             git clone --depth 1 https://github.com/zdenop/tesseract.git -b cmake_testing --single-branch
             cd tesseract
             git submodule update --init
             git clone --depth 1 https://github.com/egorpugin/tessdata tessdata_unittest
             mv tessdata_unittest/fonts/* ${{ github.workspace }}/tesseract/test/testing/
             cp -R -u -v tessdata_unittest/* ${{ github.workspace }}/tesseract/
      - name: '️🆔 Set build output dir'
        id: strings
        shell: bash
        run: |
             echo "build-output-dir=${{ github.workspace }}/tesseract/build" >> "$GITHUB_OUTPUT"         

      - name: configure cmake
        env:
          CXX: ${{ matrix.config.compiler }}
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }} 
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_FLAGS="${{ matrix.cxxflags}}" \
              -S ${{ github.workspace }}/tesseract -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TRAINING_TOOLS=ON -DBUILD_TESTS=ON
              -GNinja

      - name: build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j 4

      - name: test
        run: ctest -C ${{ matrix.build_type }} --test-dir ${{ steps.strings.outputs.build-output-dir }} --output-on-failure -O test-suite.log -j 4
